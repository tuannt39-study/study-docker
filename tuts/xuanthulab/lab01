
Giới thiệu về Docker
https://xuanthulab.net/gioi-thieu-ve-docker-lam-quen-voi-docker-tao-container.html

Giới thiệu Docker
Docker là một công cụ giúp cho việc tạo ra và triển khai các container để phát triển, chạy ứng dụng được dễ dàng.
Các container là môi trường, mà ở đó lập trình viên đưa vào các thành phần cần thiết để ứng dụng của họ chạy được,
bằng cách đóng gói ứng dụng cùng với container như vậy, nó đảm bảo ứng dụng chạy được và giống nhau ở các máy khác
nhau (Linux, Windows, Desktop, Server ...)

Docker có vẻ rất giống máy ảo (nhiều người từng tạo máy ảo với công cụ ảo hóa như Virtual Box, VMWare),
nhưng có điểm khác với VM: thay vì tạo ra toàn bộ hệ thống (dù ảo hóa), Docker lại cho phép ứng dụng sử
dụng nhân của hệ điều hành đang chạy Docker để chạy ứng dụng bằng cách bổ sung thêm các thành phần còn thiếu cung cấp bởi container.
Cách này làm tăng hiệu xuất và giảm kích thước ứng dụng.

Ai dùng Docker? Docker mang lại lợi ích cho cả lập trình viên lẫn quản trị hệ thống, sử dụng Docker lập trình viên
tập trung vào mà viết code chứ không lo lắng về việc triển khai, không lo lắng ở máy của lập trình viên chạy được,
máy khác lại không chạy được ...

Video
Docker là công cụ để chúng ta đóng gói và chạy các ứng dụng.
Docker là phần mềm mã nguồn mở nó giúp chúng ta tạo ra các container để chúng ta phát triển, triển khai các ứng dụng,
nói cách khác nó cho phép các ứng dụng chạy trong 1 môi trường cách ly gọi là container.

Chúng ta có 1 cái máy vật lý trong đó có các tài nguyên phần cứng, ổ đĩa, cpu, ram và nó chạy trên 1 hệ điều hành
nào đó mà chúng ta gọi là máy host. Máy host này dùng để cài docker, khi docker chạy chúng ta muốn 1 ứng dụng nào
đó chạy trên môi trường docker thì docker sẽ tạo ra 1 môi trường cách ly gọi là các container. Trong các container
có chứa đầy đủ các thư viện, các gói ứng dụng để nhằm đảm bảo cho các ứng dụng của chúng ta chạy được trong docker.
Container đó là 1 môi trường cách ly, docker có thể tạo ra nhiều các container khác nhau để chạy nhiều ứng dụng khác
nhau. Những container này do nó cách ly nên nó ko có sự tương tác qua lại với nhau.

Đối với các công cụ ảo hóa như VirtuaBox thì việc ảo hóa được thiết lập bằng cách cài 1 lớp ảo hóa. Lớp ảo hóa này sẽ
phân chia các tài nguyên của máy như cpu, ram từ đó tạo ra các máy ảo. Trên những máy ảo này cài các hệ điều hành khác
nhau và chạy các ứng dụng trên những máy ảo đó. Như vậy việc chúng ta chia ra càng nhiều máy ảo là sử dụng nhiều
tài nguyên khác nhau. Đồng thời việc chúng ta cài đặt những máy ảo này, cũng giống nhau chúng ta cài đặt trên
những máy vật lý thật. Các ứng dụng chạy trên máy ảo sẽ sử dụng những thư viện và hệ điều hành của máy ảo đó.

Với các ứng dụng trên docker khi chạy thì nó sẽ sử dụng chính hệ điều hành của máy host và bổ sung thêm những thư viện,
các gói phần mềm cần thiết để chạy được những ứng dụng của nó. Do ứng dụng chạy trên docker cùng sử dụng hệ điều hành
của máy host nên nó có thể chia sẻ tài nguyên và chạy nhanh hơn so với các chương trình ảo hóa.

docker version
docker --version
docker info
